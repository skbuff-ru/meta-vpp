name: Build VPP with Yocto

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            gawk wget git-core diffstat unzip texinfo gcc-multilib \
            build-essential chrpath socat cpio python3 python3-pip \
            python3-pexpect xz-utils debianutils iputils-ping libsdl1.2-dev \
            xterm autoconf libtool libncurses5-dev libssl-dev libpcap-dev \
            libnuma-dev ninja-build cmake pkg-config libpython3-dev python3-ply python3-setuptools

      - name: Clone Yocto layers
        run: |
          mkdir -p $HOME/yocto
          cd $HOME/yocto
          git clone https://git.yoctoproject.org/poky.git
          cd poky && git checkout scarthgap
          cd ..
          git clone https://github.com/openembedded/meta-openembedded.git
          cd meta-openembedded && git checkout scarthgap
          cd ..
          git clone git://git.yoctoproject.org/meta-dpdk
          cd meta-dpdk && git checkout scarthgap
          cp -r $GITHUB_WORKSPACE $HOME/yocto/meta-vpp
          ls $HOME/yocto/

      - name: Copy meta-vpp and initialize environment
        run: |
          cd $HOME/yocto/poky
          . oe-init-build-env build
          pwd
          ls $HOME/yocto/
          bitbake-layers add-layer $HOME/yocto/meta-openembedded/meta-oe
          bitbake-layers add-layer $HOME/yocto/meta-openembedded/meta-python
          bitbake-layers add-layer $HOME/yocto/meta-openembedded/meta-networking
          bitbake-layers add-layer $HOME/yocto/meta-dpdk
          bitbake-layers add-layer $HOME/yocto/meta-vpp
          cat conf/bblayers.conf

      - name: Configure build
        run: |
          cd $HOME/yocto/poky/build
          echo 'MACHINE = "qemux86-64"' >> conf/local.conf
          echo 'DISTRO = "poky"' >> conf/local.conf
          echo 'IMAGE_INSTALL:append = " vpp vpp-python-api"' >> conf/local.conf
          echo 'INHERIT += "rm_work"' >> conf/local.conf

      - name: Cache sstate and downloads
        uses: actions/cache@v4
        with:
          path: |
            $HOME/yocto/poky/downloads
            $HOME/yocto/poky/sstate-cache
          key: ${{ runner.os }}-sstate-${{ hashFiles('**/layer.conf') }}
          restore-keys: ${{ runner.os }}-sstate-

      - name: Build VPP
        run: |
          cd $HOME/yocto/poky
          . oe-init-build-env build
          bitbake vpp

      - name: Upload built packages
        uses: actions/upload-artifact@v4
        if: success()
        with:
          name: vpp-packages
          path: $HOME/yocto/poky/build/tmp/deploy/ipk/qemux86-64/vpp_*.ipk
